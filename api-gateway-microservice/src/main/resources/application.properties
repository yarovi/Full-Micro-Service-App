spring.application.name=api-gateway-microservice
server.port=8080
# Eureka Configuration
eureka.instance.instance-id=${spring.application.name}:${random.value}
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/eureka/

# Define api-gateway routes
#Product
spring.cloud.gateway.routes[0].id=app-product-microservice
spring.cloud.gateway.routes[0].uri=lb://product-microservice
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/v1/category/**,/api/v1/products/**
spring.cloud.gateway.routes[0].filters[0]=TokenRelay
#Booking
spring.cloud.gateway.routes[1].id=booking-microservice
spring.cloud.gateway.routes[1].uri=lb://booking-microservice
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/v1/booking/**
#Others
#spring.cloud.gateway.routes[2].id=app-discovery-microservice
#spring.cloud.gateway.routes[2].uri=lb://discovery-microservice
#spring.cloud.gateway.routes[2].predicates[0]=Path=/eureka/**



logging.level.web=DEBUG

spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9991/realms/mycompany-microservice-realm

spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=iABWLXl7QAKmTHtBo2rGl3r8Hi9F3tXT
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.scope=openid
#{baseUrl}/login/oauth2/code/{registrationId}

logging.level.org.springframework.security=DEBUG

